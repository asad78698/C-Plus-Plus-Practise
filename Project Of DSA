
#include <iostream>

using namespace std;

void SearchForStudent(int student[]){
    
    int searchStudent, start=0, end=7, size = 7;
    
    cout<<"Enter The Id Of Student You Want To Search "<<endl;
    cin>>searchStudent;
    
    while(start<=end){
        
        int mid = (start+end)/2;
        
        if(searchStudent==size){
            
            cout<<"The Student Is Not Found "<<endl;
            
        }
        
        else if(mid==searchStudent){
            
            cout<<"The Student Is Found: "<<searchStudent<<endl;
        }
        
        else if(searchStudent<student[mid]){
            
            end = mid-1;
            
        }
        
        else{
            
            start = mid+1;
        }
        
    }
}

void viewStudent(int student[]){
    
    cout<<"The Students Currently Enrolled "<<endl;
    
    for(int i=0; i<7-1; ++i){
        
        for(int j=i+1; j<7; j++){
            
            int temp = student[i];
            student[i]=student[j];
            student[j]=temp;
        }
        
       
    }
    
    for(int i = 0; i<7; ++i){
        
         cout<<" "<<student[i];
    }
    
        cout<<" \n ---------------------------------------------------"<<endl;

}

void DeleteStudent(int student[]){
    int searchfordel;
    
    cout<<"Enter Id Of The Student You Want To Delete "<<endl;
    cin>>searchfordel;
    
    for(int i=0; i<7; ++i){
        
        if(student[i]==searchfordel){
            
            student[i] = 0;
            
        }
    }
    
    for(int i=0; i<7; ++i){
        
        if(student[i]==0){
            
            continue;
        }
    }
    
    cout<<"The Student Id Has Been Deleted "<<endl;
    
}

void GenerateVoice(int student[]){
    
    int search,courses, sum, idfound, tax,libfee, Studentfund, discount, total;

    
    cout<<" Enter Your Student ID "<<endl;
    cin>>search;
    
    for(int i=0; i<7; ++i){
        
        if(student[i]==search){
            
            cout<<"The Student is found "<<endl;
            
            idfound=student[i];
        }
    }
    
    
    cout<<"Enter The Courses You Want To Enrolled ?"<<endl;
    cin>>courses;
    
    sum = courses*1200;
        
    libfee = 1000;
    
    Studentfund = 500;
    
    total = sum+libfee+Studentfund;

    tax = (15%total)*100;
    
    if(total>10000)
    {
        total = tax+total;
    }
    
    if(total>15000){
        
        discount = (20%total)*100;
        
        total = total-discount;
    }


    
    cout<<"---------------------------------------"<<endl;
    
    cout<<" \t Invoice Of Bacon House School "<<endl;
    
    cout<<"---------------------------------------"<<endl;
    
    cout<<" Your Student Id: "<<idfound<<" \t\t Issued Date: 12-6-2023 \n\n Total Courses = "<<courses<<" \n Tax = "<<tax<<" \n Library Fee: "<<libfee<<" \n Student Fund: "<<Studentfund<<" \n Discount: "<<discount<<" \n Total: "<<total<<endl;
    

    
    
    
}

void AddStudent(int student[]){
    
    int howmany;
    
    cout<<"---------------------------------------------------"<<endl;
    
    cout<<"How Many Student You Want To Add?"<<endl;
    cin>>howmany;
    
    cout<<"Enter Student IDs"<<endl;
    for(int i=0; i<howmany; ++i){
        
        cin>>student[i];
    }
    
    cout<<"The Students Are Added Successfully "<<endl;
    
    
}



int main()
{
   int enter, choice;
   
   
   int student[7]={11,12,15,16,18,19,25};
 
   cout<<"------------------------------------------"<<endl;
   cout<<" Press 1: For Menu And Press 2: For Exit "<<endl;
   cin>>enter;
   
   while(enter != 7){
       
        cout<<" \n Press 1: Add Student \n Press 2: View All Student \n Press 3: Generate The Invoice \n Press 4: Delete The Student \n Press 5: Search The Student "<<endl;
        cin>>choice;
       
       switch(choice){
           

           case 1: 
           AddStudent(student);
           break;
           
           case 2:
           viewStudent(student);
           break;
           
           case 3:
           GenerateVoice(student);
           break;
           
           case 4:
           DeleteStudent(student);
           break;
           
           case 5:
           SearchForStudent(student);
           break;
       }
   }
   
  
}
